import telebot
from telebot import types
import sqlite3
from random import randint
import datetime

bot = telebot.TeleBot('ENTER BOT TOKEN HERE')
status = 'wait'
mode = ''
current_id = ''
value = ''


@bot.message_handler(commands=['start'])
def welcome(message):
    conn = sqlite3.connect('users.sql')
    cur = conn.cursor()
    cur.execute(f'INSERT INTO users (tg_id, status, balance, date_of_last_take, message_count, prefix) '
                f'SELECT {message.chat.id}, "–£—á–∞—Å—Ç–Ω–∏–∫", 0, NULL, 0, 0 '
                f'WHERE NOT EXISTS (SELECT 1 FROM users WHERE tg_id = {message.chat.id});'
                )
    cur.execute(f'UPDATE users '
                f'SET message_count = message_count + 1 '
                f'WHERE tg_id = {message.chat.id};')
    conn.commit()
    cur.close()
    conn.close()

    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton("–ø—Ä–æ—Ñ–∏–ª—å", callback_data='profile')
    btn2 = types.InlineKeyboardButton("help", callback_data='help')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     f"–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞—Ä–∫–µ—Ç üóù \n\n"
                     f"–¢—É—Ç —Ç—ã —Å–º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ üñ§\n\n"
                     f"‚Ä¢ –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º - –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ø—Ä–æ—Ñ–∏–ª—å¬ª –≤ —ç—Ç–æ–º —á–∞—Ç–µ\n\n"
                     f"‚Ä¢ –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´help¬ª",
                     parse_mode='html',
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    global mode, value
    conn = sqlite3.connect('users.sql')
    cur = conn.cursor()

    if callback.data == 'profile':
        cur.execute(
            f'SELECT status, balance, diamonds, message_count, prefix FROM users WHERE tg_id = {callback.message.chat.id}')
        row = cur.fetchone()
        status, balance, diamonds, message_count, prefix = row
        if prefix == 0:
            prefix = '–ù–µ—Ç'
        else:
            prefix = '–ï—Å—Ç—å'
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω', callback_data='shop')
        btn2 = types.InlineKeyboardButton(text="–ù–∞ –æ—Ö–æ—Ç—É", callback_data='go_to_hunt')
        btn3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='main_menu')
        markup.add(btn1, btn2, btn3)
        bot.edit_message_text(
            message_id=callback.message.message_id,
            chat_id=callback.message.chat.id,
            text=f'üñ≤ID: {callback.message.chat.id}\n'
                 f'üíº–°—Ç–∞—Ç—É—Å: <b>{status}</b>\n'
                 f'üóù–ë–∞–ª–∞–Ω—Å: <b>{balance}</b>\n'
                 f'üíé–ê–ª–º–∞–∑—ã: <b>{diamonds}</b>\n'
                 f'üíå–°–æ–æ–±—â–µ–Ω–∏–π: <b>{message_count}</b>\n'
                 f'‚öúÔ∏è–ü—Ä–µ—Ñ–∏–∫—Å: <b>{prefix}</b>',
            reply_markup=markup, parse_mode='html')
    elif callback.data == 'help':
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn2 = types.InlineKeyboardButton(text="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞", url='t.me/parzival2303')
        btn1 = types.InlineKeyboardButton(text="–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", url='t.me/uegegs66')
        btn3 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='main_menu')
        markup.add(btn1, btn2, btn3)
        bot.edit_message_text(
            message_id=callback.message.message_id,
            chat_id=callback.message.chat.id,
            text="–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ø—Ä–æ—Ñ–∏–ª—å¬ª –≤–Ω–∏–∑—É —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n"
                 "–ü–æ –¥—Ä—É–≥–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
            reply_markup=markup
        )
    elif callback.data == 'shop':
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton(text='–í–Ω—É—Ç—Ä–µ–∏–≥—Ä–æ–≤—ã–µ –≤–µ—â–∏üëª', callback_data='prefix')
        btn2 = types.InlineKeyboardButton(text='–ê–ª–º–∞–∑—ãüíé', url='t.me/uegegs66')
        btn3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='profile')
        markup.add(btn1, btn2, btn3)
        bot.edit_message_text(
            message_id=callback.message.message_id,
            chat_id=callback.message.chat.id,
            text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
            reply_markup=markup
        )
    elif callback.data == 'main_menu':
        welcome(message=callback.message)
    elif callback.data == 'drop_balance':
        mode = 'drop_next'
        value = 'balance'
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        markup.add(btn)
        bot.edit_message_text(message_id=callback.message.message_id, chat_id=callback.message.chat.id,
                              text='–í–≤–µ–¥–∏—Ç–µ Telegram ID —Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, '
                                   '–∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:', reply_markup=markup)
    elif callback.data == 'drop_diamonds':
        mode = 'drop_next'
        value = 'diamonds'
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        markup.add(btn)
        bot.edit_message_text(message_id=callback.message.message_id, chat_id=callback.message.chat.id,
                              text='–í–≤–µ–¥–∏—Ç–µ Telegram ID —Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, '
                                   '–∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –∞–ª–º–∞–∑—ã:', reply_markup=markup)
    elif callback.data == 'drop':
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton(text='–ë–∞–ª–∞–Ω—Åüóù', callback_data='drop_balance')
        btn2 = types.InlineKeyboardButton(text='–ê–ª–º–∞–∑—ãüíé', callback_data='drop_diamonds')
        btn3 = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        markup.add(btn1, btn2, btn3)
        bot.edit_message_text(message_id=callback.message.message_id, chat_id=callback.message.chat.id,
                              text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:', reply_markup=markup)

    elif callback.data == 'take_balance':
        mode = 'take_next'
        value = 'balance'
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        markup.add(btn)
        bot.edit_message_text(message_id=callback.message.message_id, chat_id=callback.message.chat.id,
                              text='–í–≤–µ–¥–∏—Ç–µ Telegram ID —Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, '
                                   '—É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –±–∞–ª–∞–Ω—Å:', reply_markup=markup)
    elif callback.data == 'take_diamonds':
        mode = 'take_next'
        value = 'diamonds'
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        markup.add(btn)
        bot.edit_message_text(message_id=callback.message.message_id, chat_id=callback.message.chat.id,
                              text='–í–≤–µ–¥–∏—Ç–µ Telegram ID —Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, '
                                   '—É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –∞–ª–º–∞–∑—ã:', reply_markup=markup)
    elif callback.data == 'take':

        markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton(text='–ë–∞–ª–∞–Ω—Åüóù', callback_data='take_balance')
        btn2 = types.InlineKeyboardButton(text='–ê–ª–º–∞–∑—ãüíé', callback_data='take_diamonds')
        btn3 = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
        markup.add(btn1, btn2, btn3)
        bot.edit_message_text(message_id=callback.message.message_id, chat_id=callback.message.chat.id,
                              text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –∏–∑—ä—è—Ç–∏—è:', reply_markup=markup)

    elif callback.data == 'cancel':
        mode = ''
        welcome(message=callback.message)
    elif callback.data == 'prefix':
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton(text='–ü—Ä–µ—Ñ–∏–∫—Å', callback_data='prefix_buy')
        btn2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='shop')
        markup.add(btn1, btn2)
        bot.edit_message_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç', message_id=callback.message.message_id,
                              chat_id=callback.message.chat.id, reply_markup=markup)
    elif callback.data == 'prefix_buy':
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å', callback_data='prefix_buy_load')
        btn2 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='prefix')
        markup.add(btn1, btn2)
        bot.edit_message_text('–ö—É–ø–∏—Ç—å –ü—Ä–µ—Ñ–∏–∫—Å –∑–∞ 250üóù?', chat_id=callback.message.chat.id,
                              message_id=callback.message.message_id, reply_markup=markup)
    elif callback.data == 'prefix_buy_load':
        conn = sqlite3.connect('users.sql')
        cur = conn.cursor()
        cur.execute(f'SELECT balance FROM users WHERE tg_id = {callback.message.chat.id}')
        balance = cur.fetchone()[0]
        if balance < 250:
            cur.execute(f'SELECT prefix FROM users WHERE tg_id = {callback.message.chat.id}')
            prefix = cur.fetchone()[0]
            if prefix == 1:
                lol = types.InlineKeyboardMarkup(row_width=1)
                btn1 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='shop')
                lol.add(btn1)
                bot.edit_message_text(text='–£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω –ü—Ä–µ—Ñ–∏–∫—Å', message_id=callback.message.message_id,
                                      chat_id=callback.message.chat.id, reply_markup=lol)
            else:
                markup = types.InlineKeyboardMarkup(row_width=1)
                btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='shop')
                markup.add(btn)
                bot.edit_message_text('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üóù –Ω–∞ –±–∞–ª–∞—Å–µ!', message_id=callback.message.message_id,
                                      chat_id=callback.message.chat.id, reply_markup=markup)
        else:
            cur.execute(f'SELECT prefix FROM users WHERE tg_id = {callback.message.chat.id}')
            prefix = cur.fetchone()[0]
            if prefix == 1:
                lol = types.InlineKeyboardMarkup(row_width=1)
                btn1 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='shop')
                lol.add(btn1)
                bot.edit_message_text(text='–£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω –ü—Ä–µ—Ñ–∏–∫—Å', message_id=callback.message.message_id,
                                      chat_id=callback.message.chat.id, reply_markup=lol)
            else:
                cur.execute(f'UPDATE users '
                            f'SET balance = balance - 250 '
                            f'WHERE tg_id = {callback.message.chat.id};')
                cur.execute(f'UPDATE users '
                            f'SET prefix = 1 '
                            f'WHERE tg_id = {callback.message.chat.id};')
                markup = types.InlineKeyboardMarkup(row_width=1)
                btn1 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='shop')
                markup.add(btn1)
                bot.edit_message_text('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–±—Ä–µ–ª–∏ –ü—Ä–µ—Ñ–∏–∫—Å!',
                                      message_id=callback.message.message_id, chat_id=callback.message.chat.id,
                                      reply_markup=markup)
    elif callback.data == 'go_to_hunt':
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='profile')
        markup.add(btn)
        conn = sqlite3.connect('users.sql')
        cur = conn.cursor()
        cur.execute(f'SELECT date_of_last_take FROM users WHERE tg_id = {callback.message.chat.id}')
        date_of_last_take = cur.fetchone()
        if date_of_last_take[0] is None or datetime.datetime.fromisoformat(
                date_of_last_take[0]).date() < datetime.date.today():
            random_coins = randint(1, 3)
            cur.execute(f"UPDATE users "
                        f"SET date_of_last_take = date('now', 'localtime'), "
                        f"    balance = balance + {random_coins} "
                        f"WHERE tg_id = {callback.message.chat.id};")

            bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id,
                                  text=f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ {random_coins} üóù', reply_markup=markup)

        else:
            bot.edit_message_text(message_id=callback.message.message_id, chat_id=callback.message.chat.id,
                                  text="–° –ø—Ä–æ—à–ª–æ–π –æ—Ö–æ—Ç—ã –µ—â—ë –Ω–µ –ø—Ä–æ—à–ª–∏ —Å—É—Ç–∫–∏ :D", reply_markup=markup)
    conn.commit()
    cur.close()
    conn.close()


@bot.message_handler(content_types=['text'])
def check(message):
    global status, mode, current_id, value
    if message.text == 'control':
        conn = sqlite3.connect('users.sql')
        cur = conn.cursor()
        cur.execute(f'SELECT status FROM users WHERE tg_id = {message.chat.id}')
        status = cur.fetchone()[0]
        if status != "–ê–¥–º–∏–Ω":
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é:')
            status = 'check'
        else:
            markup = types.InlineKeyboardMarkup(row_width=1)
            btn1 = types.InlineKeyboardButton(text='–í—ã–¥–∞—Ç—å –≤–∞–ª—é—Ç—É', callback_data='drop')
            btn2 = types.InlineKeyboardButton(text='–ó–∞–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É', callback_data='take')
            markup.add(btn1, btn2)
            bot.send_message(chat_id=message.chat.id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω!', reply_markup=markup)
            status = ''
            cur.close()
            conn.close()
    elif status == 'check':
        if message.text == 'lRuNVIaJd4Dfd1698klVt4x':

            conn = sqlite3.connect('users.sql')
            cur = conn.cursor()
            cur.execute(f'UPDATE users '
                        f'SET status = "–ê–¥–º–∏–Ω" '
                        f'WHERE tg_id = {message.chat.id};')
            conn.commit()
            cur.close()
            conn.close()

            markup = types.InlineKeyboardMarkup(row_width=1)
            btn1 = types.InlineKeyboardButton(text='–í—ã–¥–∞—Ç—å –≤–∞–ª—é—Ç—É', callback_data='drop')
            btn2 = types.InlineKeyboardButton(text='–ó–∞–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É', callback_data='take')
            markup.add(btn1, btn2)
            bot.send_message(chat_id=message.chat.id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω!', reply_markup=markup)
            status = ''
        else:
            markup = types.InlineKeyboardMarkup(row_width=1)
            btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='main_menu')
            markup.add(btn)
            bot.send_message(chat_id=message.chat.id, text='–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!', reply_markup=markup)
    else:
        if mode == 'take_last':
            markup = types.InlineKeyboardMarkup(row_width=1)
            btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='main_menu')
            markup.add(btn)
            if message.text.isdigit():
                if current_id:

                    conn = sqlite3.connect('users.sql')
                    cur = conn.cursor()
                    try:
                        if value == 'balance':
                            cur.execute(f'UPDATE users '
                                        f'SET balance = balance - {message.text} '
                                        f'WHERE tg_id = {current_id};')
                            bot.send_message(chat_id=message.chat.id,
                                             text=f'‚úÖ–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑—ä—è–ª–∏ —Å–æ —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {current_id} {message.text}üóù',
                                             reply_markup=markup)
                        elif value == 'diamonds':
                            cur.execute(f'UPDATE users '
                                        f'SET diamonds = diamonds - {message.text} '
                                        f'WHERE tg_id = {current_id};')
                            bot.send_message(chat_id=message.chat.id,
                                             text=f'‚úÖ–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑—ä—è–ª–∏ —Å–æ —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {current_id} {message.text}üíé',
                                             reply_markup=markup)
                        conn.commit()
                        cur.close()
                        conn.close()
                    except TypeError:
                        bot.send_message(chat_id=message.chat.id,
                                         text='–û—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.', reply_markup=markup)
            else:
                bot.send_message(chat_id=message.chat.id,
                                 text='–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ —Å—É–º–º—ã!', reply_markup=markup)

        elif mode == 'drop_last':
            if message.text.isdigit():
                if current_id:
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='main_menu')
                    markup.add(btn)
                    conn = sqlite3.connect('users.sql')
                    cur = conn.cursor()
                    try:
                        if value == 'balance':
                            cur.execute(f'UPDATE users '
                                        f'SET balance = balance + {message.text} '
                                        f'WHERE tg_id = {current_id};')
                            bot.send_message(chat_id=message.chat.id,
                                             text=f'‚úÖ–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {current_id} –Ω–∞ {message.text}üóù',
                                             reply_markup=markup)
                        elif value == 'diamonds':
                            cur.execute(f'UPDATE users '
                                        f'SET diamonds = diamonds + {message.text} '
                                        f'WHERE tg_id = {current_id};')
                            bot.send_message(chat_id=message.chat.id,
                                             text=f'‚úÖ–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {current_id} –Ω–∞ {message.text}üíé',
                                             reply_markup=markup)

                        conn.commit()
                        cur.close()
                        conn.close()
                    except TypeError:
                        bot.send_message(chat_id=message.chat.id,
                                         text='–û—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.', reply_markup=markup)
        elif mode == 'take_next':
            markup = types.InlineKeyboardMarkup(row_width=1)
            btn = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
            markup.add(btn)
            if message.text.isdigit():
                conn = sqlite3.connect('users.sql')
                cur = conn.cursor()
                try:
                    cur.execute(f'SELECT tg_id FROM users WHERE tg_id = {message.text}')
                    current_id = cur.fetchone()[0]
                    if current_id:
                        mode = 'take_last'
                        bot.send_message(chat_id=message.chat.id,
                                         text='–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã –¥–ª—è –∏–∑—ä—è—Ç–∏—è:', reply_markup=markup)
                    else:
                        bot.send_message(chat_id=message.chat.id,
                                         text='–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', reply_markup=markup)
                    cur.close()
                    conn.close()
                except TypeError:
                    bot.send_message(chat_id=message.chat.id,
                                     text='–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', reply_markup=markup)
            else:
                bot.send_message(chat_id=message.chat.id,
                                 text='–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', reply_markup=markup)

        elif mode == 'drop_next':
            markup = types.InlineKeyboardMarkup(row_width=1)
            btn = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
            markup.add(btn)
            if message.text.isdigit():
                conn = sqlite3.connect('users.sql')
                cur = conn.cursor()
                try:
                    cur.execute(f'SELECT tg_id FROM users WHERE tg_id = {message.text}')
                    current_id = cur.fetchone()[0]

                    if current_id:
                        mode = 'drop_last'
                        bot.send_message(chat_id=message.chat.id,
                                         text='–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã –¥–ª—è –≤—ã–¥–∞—á–∏:', reply_markup=markup)
                    else:
                        bot.send_message(chat_id=message.chat.id,
                                         text='–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', reply_markup=markup)
                    cur.close()
                    conn.close()
                except TypeError:
                    bot.send_message(chat_id=message.chat.id,
                                     text='–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', reply_markup=markup)
            else:
                bot.send_message(chat_id=message.chat.id,
                                 text='–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', reply_markup=markup)
        else:
            markup = types.InlineKeyboardMarkup(row_width=1)
            btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='main_menu')
            markup.add(btn)
            bot.send_message(chat_id=message.chat.id,
                             text='–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —è –æ—Ç–≤–µ—á–∞—é —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã', reply_markup=markup)


bot.infinity_polling()
